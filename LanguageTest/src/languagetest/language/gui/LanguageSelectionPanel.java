/*
 * LanguageSelectionPanel.java
 *
 * Created on April 12, 2004, 5:40 PM
 */

package languagetest.language.gui;

import java.util.Locale;
import java.util.Arrays;
import java.util.List;
import java.util.Iterator;
import java.awt.Font;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JOptionPane;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import org.jfree.ui.FontChooserDialog;
import languagetest.language.test.UserConfig;
import languagetest.language.test.LanguageConfig;
import languagetest.language.test.UniversalLanguage;
import languagetest.language.test.TestHistoryStorageException;
/**
 *
 * @author  keith
 */
public class LanguageSelectionPanel extends javax.swing.JPanel
{
    boolean inited = false;
    final Font defaultFont = new Font(null, Font.PLAIN, 12);
    JDialog parentDialog;
    DefaultListModel nativeModel = null;
    DefaultListModel foreignModel = null;
    /** Creates new form LanguageSelectionPanel */
    public LanguageSelectionPanel(JDialog jDialog)
    {
        parentDialog = jDialog;
        initComponents();
        UserConfig config = UserConfig.getCurrent();
        // populate the lists
        nativeModel = 
            new DefaultListModel();
        foreignModel = 
            new DefaultListModel();
        
        Iterator i = config.getNativeLanguages().iterator();
        while (i.hasNext())
        {
            nativeModel.addElement(i.next());
        }
        i = config.getForeignLanguages().iterator();
        while (i.hasNext())
        {
            foreignModel.addElement(i.next());
        }
        nativeList.setModel(nativeModel);
        foreignList.setModel(foreignModel);
        jDialog.pack();
        inited = true;
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        jPanel4 = new javax.swing.JPanel();
        doneButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        nativePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nativeList = new javax.swing.JList();
        nFontName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        nAdd = new javax.swing.JButton();
        nDelete = new javax.swing.JButton();
        nFont = new javax.swing.JButton();
        foreignPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        foreignList = new javax.swing.JList();
        fFontName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        fAdd = new javax.swing.JButton();
        fDelete = new javax.swing.JButton();
        fFont = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        doneButton.setText("OK");
        doneButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                doneButtonActionPerformed(evt);
            }
        });

        jPanel4.add(doneButton);

        add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        nativePanel.setLayout(new javax.swing.BoxLayout(nativePanel, javax.swing.BoxLayout.Y_AXIS));

        nativePanel.setBorder(new javax.swing.border.TitledBorder("Known Languages"));
        nativePanel.setPreferredSize(new java.awt.Dimension(205, 274));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 100));
        nativeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        nativeList.setToolTipText("Languages that you are already fluent in, that you will use to learn new languages with.");
        nativeList.setAlignmentX(0.0F);
        nativeList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                nativeListValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(nativeList);

        nativePanel.add(jScrollPane1);

        nFontName.setText(" ");
        nFontName.setAlignmentX(0.5F);
        nativePanel.add(nFontName);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        nAdd.setText("Add");
        nAdd.setToolTipText("Add a new Language / Script");
        nAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nAddActionPerformed(evt);
            }
        });

        jPanel2.add(nAdd);

        nDelete.setText("Delete");
        nDelete.setToolTipText("Remove currently selected Language/Script");
        nDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nDeleteActionPerformed(evt);
            }
        });

        jPanel2.add(nDelete);

        nFont.setText("Font");
        nFont.setToolTipText("Set Default Font for the currently selected Language/Script");
        nFont.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nFontActionPerformed(evt);
            }
        });

        jPanel2.add(nFont);

        nativePanel.add(jPanel2);

        jPanel3.add(nativePanel);

        foreignPanel.setLayout(new javax.swing.BoxLayout(foreignPanel, javax.swing.BoxLayout.Y_AXIS));

        foreignPanel.setBorder(new javax.swing.border.TitledBorder("New Languages to be learnt"));
        foreignPanel.setPreferredSize(new java.awt.Dimension(205, 180));
        foreignList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        foreignList.setToolTipText("Languages and Scripts that you want to learn with this program.");
        foreignList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                foreignListValueChanged(evt);
            }
        });

        jScrollPane2.setViewportView(foreignList);

        foreignPanel.add(jScrollPane2);

        fFontName.setText(" ");
        fFontName.setAlignmentX(0.5F);
        foreignPanel.add(fFontName);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        fAdd.setText("Add");
        fAdd.setToolTipText("Add a new Language / Script");
        fAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fAddActionPerformed(evt);
            }
        });

        jPanel1.add(fAdd);

        fDelete.setText("Delete");
        fDelete.setToolTipText("Remove currently selected Language/Script");
        fDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fDeleteActionPerformed(evt);
            }
        });

        jPanel1.add(fDelete);

        fFont.setText("Font");
        fFont.setToolTipText("Set Default Font for the currently selected Language/Script");
        fFont.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fFontActionPerformed(evt);
            }
        });

        jPanel1.add(fFont);

        foreignPanel.add(jPanel1);

        jPanel3.add(foreignPanel);

        add(jPanel3, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    private void foreignListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_foreignListValueChanged
    {//GEN-HEADEREND:event_foreignListValueChanged
        if (foreignList.getSelectedValue() != null)
        {
            UniversalLanguage ul = (UniversalLanguage)
                foreignList.getSelectedValue();
            Font font = UserConfig.getCurrent().getForeignDefaultFont(ul);
            setFontDetails(fFontName, font);
        }
        else
        {
            fFontName.setText(" ");
        }
        
    }//GEN-LAST:event_foreignListValueChanged

    protected void setFontDetails(JLabel label, Font font)
    {
        if (font != null)
        {
            label.setText(font.getName());
            label.setToolTipText("Font: " + font.getName());
            label.setFont(font);
        }
        else
        {
            label.setText(" ");
            label.setToolTipText("None");
        }
    }
    
    private void nativeListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_nativeListValueChanged
    {//GEN-HEADEREND:event_nativeListValueChanged
        if (nativeList.getSelectedValue() != null)
        {
            UniversalLanguage ul = (UniversalLanguage)
                nativeList.getSelectedValue();
            Font font = UserConfig.getCurrent().getNativeDefaultFont(ul);
            setFontDetails(nFontName, font);
        }
        else
        {
            nFontName.setText(" ");
        }
    }//GEN-LAST:event_nativeListValueChanged

    private void fFontActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fFontActionPerformed
    {//GEN-HEADEREND:event_fFontActionPerformed
        if (foreignList.getSelectedIndex()>-1)
        {
            UniversalLanguage ul = (UniversalLanguage)
                foreignModel.getElementAt(foreignList.getSelectedIndex());
            FontChooserDialog chooser = 
                new FontChooserDialog(parentDialog, 
                                     "Select Default Font for "
                                      + ul.getDescription(), true, 
                                      UserConfig.getCurrent()
                                      .getForeignDefaultFont(ul));
            chooser.setSize(400, 400);
            chooser.setVisible(true);
            if (!chooser.isCancelled())
            {
                UserConfig.getCurrent().addForeignLanguage
                    (ul, chooser.getSelectedFont());
                setFontDetails(fFontName, chooser.getSelectedFont());
            }
        }
    }//GEN-LAST:event_fFontActionPerformed

    private void nFontActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nFontActionPerformed
    {//GEN-HEADEREND:event_nFontActionPerformed
        if (nativeList.getSelectedIndex()>-1)
        {
            UniversalLanguage ul = (UniversalLanguage)
                nativeModel.getElementAt(nativeList.getSelectedIndex());
            FontChooserDialog chooser = 
                new FontChooserDialog(parentDialog, 
                                     "Select Default Font for "
                                      + ul.getDescription(), true, 
                                      UserConfig.getCurrent()
                                      .getNativeDefaultFont(ul));
            chooser.setSize(400, 400);
            chooser.setVisible(true);
            if (!chooser.isCancelled())
            {
                UserConfig.getCurrent().addNativeLanguage
                    (ul, chooser.getSelectedFont());
                setFontDetails(nFontName, chooser.getSelectedFont());
            }
        }
    }//GEN-LAST:event_nFontActionPerformed

    private void fDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fDeleteActionPerformed
    {//GEN-HEADEREND:event_fDeleteActionPerformed
        if (foreignList.getSelectedIndex()>-1)
        {
            UniversalLanguage ul = (UniversalLanguage)
                foreignModel.getElementAt(foreignList.getSelectedIndex());
            if (LanguageConfig.getCurrent() != null &&
                LanguageConfig.getCurrent().getForeignLanguage()
                .equals(ul))
            {
                JOptionPane.showMessageDialog(this,
                    "You cannot delete a language in that is currently selected for testing.\n" +
                    "Please change to another language in the Test Selection Screen before trying again.",
                    "Delete Language Failed",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                UserConfig.getCurrent().removeForeignLanguage(ul);
                foreignModel.removeElementAt(foreignList.getSelectedIndex()); 
            }
        }
    }//GEN-LAST:event_fDeleteActionPerformed

    private void fAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fAddActionPerformed
    {//GEN-HEADEREND:event_fAddActionPerformed
        LanguageChooser lc = new LanguageChooser(parentDialog, 
            "Add New Language to Learn");
        lc.setVisible(true);
        if (lc.isOk())
        {
            // check that it does not already exist
            if (!UserConfig.getCurrent()
                .containsForeignLanguage(lc.getLanguage()))
            {
                UserConfig.getCurrent().addForeignLanguage(lc.getLanguage(), 
                                                           defaultFont);
                foreignModel.addElement(lc.getLanguage());
            }
        }
    }//GEN-LAST:event_fAddActionPerformed

    private void nDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nDeleteActionPerformed
    {//GEN-HEADEREND:event_nDeleteActionPerformed
        if (nativeList.getSelectedIndex() > -1)
        {
            UniversalLanguage ul = (UniversalLanguage)
                nativeModel.getElementAt(nativeList.getSelectedIndex());
            if (LanguageConfig.getCurrent() != null &&
                LanguageConfig.getCurrent().getNativeLanguage()
                .equals(ul))
            {
                JOptionPane.showMessageDialog(this,
                    "You cannot delete a language in that is currently selected for testing.\n" +
                    "Please change to another language in the Test Selection Screen before trying again.",
                    "Delete Language Failed",
                    JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                UserConfig.getCurrent().removeNativeLanguage(ul);
                nativeModel.removeElementAt(nativeList.getSelectedIndex()); 
            }
        }
    }//GEN-LAST:event_nDeleteActionPerformed

    private void nAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nAddActionPerformed
    {//GEN-HEADEREND:event_nAddActionPerformed
        LanguageChooser lc = new LanguageChooser(parentDialog, "Add Existing Language");
        lc.setVisible(true);
        if (lc.isOk())
        {
            // check that it does not already exist
            if (!UserConfig.getCurrent()
                .containsNativeLanguage(lc.getLanguage()))
            {
                UserConfig.getCurrent().addNativeLanguage(lc.getLanguage(), 
                                                      defaultFont);
                nativeModel.addElement(lc.getLanguage());
            }
        }
    }//GEN-LAST:event_nAddActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_doneButtonActionPerformed
    {//GEN-HEADEREND:event_doneButtonActionPerformed
        if (checkLocale()) 
        {
            if (parentDialog instanceof UserConfigDialog)
            {
                if (((UserConfigDialog)parentDialog).saveConfig())
                {
                    parentDialog.setVisible(false);
                }
            }
            else
            {
                parentDialog.setVisible(false);
            }
        }
    }//GEN-LAST:event_doneButtonActionPerformed
    
    public boolean checkLocale()
    {
        boolean check = true;
        if (nativeModel.getSize() < 1 || foreignModel.getSize() < 1) 
        {
            check = false;
        }
        else if (LanguageConfig.getCurrent() == null)
        {
            try
            {
                new LanguageConfig((UniversalLanguage)nativeModel.get(0),
                                   (UniversalLanguage)foreignModel.get(0)).load();
            }
            catch (TestHistoryStorageException e)
            {
                JOptionPane.showMessageDialog(this, 
                    "Error saving Test History\n" +
                    e.getLocalizedMessage(),
                    "Test History", JOptionPane.ERROR_MESSAGE);
                check = false;
                return false;
            }
        }
        if (check == false && inited == true)
        {
            JOptionPane.showMessageDialog(this, 
                "The Existing and New Languages should be different and must not be empty.",
                "Language Selection",JOptionPane.WARNING_MESSAGE);
        }
        return check;
    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JButton fAdd;
    private javax.swing.JButton fDelete;
    private javax.swing.JButton fFont;
    private javax.swing.JLabel fFontName;
    private javax.swing.JList foreignList;
    private javax.swing.JPanel foreignPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nAdd;
    private javax.swing.JButton nDelete;
    private javax.swing.JButton nFont;
    private javax.swing.JLabel nFontName;
    private javax.swing.JList nativeList;
    private javax.swing.JPanel nativePanel;
    // End of variables declaration//GEN-END:variables
    
}
